{"version":3,"sources":["actions/index.js","App.js","reducers/index.js","reducers/Reducer.js","store.js","index.js"],"names":["change_city","city","type","payload","change_data","dispatch","fetch","concat","then","resp","json","data","console","log","catch","e","toogle_theme","App","useDispatch","useSelector","state","theme","useEffect","react_default","a","createElement","className","onClick","onChange","target","value","current","Fragment","src","condition","icon","alt","id","feelslike_c","text","location","name","wind_mph","precip_mm","humidity","rootReducer","combineReducers","arguments","length","undefined","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","es","App_App","document","getElementById"],"mappings":"8KAAMA,SAAc,SAACC,GACnB,MAAO,CAAEC,KAAM,cAAeC,QAASF,KAGnCG,EAAc,SAACH,GACnB,OAAO,SAACI,GACNC,MAAK,oFAAAC,OACiFN,EADjF,YAGFO,KAAK,SAACC,GAAD,OAAUA,EAAKC,SACpBF,KAAK,SAACG,GACLC,QAAQC,IAAI,cAAeF,GAC3BN,EAAS,CACPH,KAAM,cACNC,QAASQ,MAGZG,MAAM,SAACC,GACN,OAAOd,MAKTe,EAAe,CAAEd,KAAM,6BClBd,SAASe,IACtB,IAAMZ,EAAWa,cAEbjB,EAAOkB,YAAY,SAACC,GAAD,OAAWA,EAAMnB,OACpCU,EAAOQ,YAAY,SAACC,GAAD,OAAWA,EAAMT,OACpCU,EAAQF,YAAY,SAACC,GAAD,OAAWA,EAAMC,QAMzC,OAJAC,oBAAU,WACRjB,EAASD,EAAYH,KACpB,IAGDsB,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQ,OAAS,WAC/BE,EAAAC,EAAAC,cAAA,UACEC,UAAWL,EAAQ,SAAW,YAC9BM,QAAS,kBAAMtB,EAASW,KAEvBK,EAAQ,QAAU,QAErBE,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQ,SAAW,aACjCE,EAAAC,EAAAC,cAAA,SACEvB,KAAK,OACL0B,SAAU,SAACb,GACTV,EAASL,EAAYe,EAAEc,OAAOC,WAGlCP,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAMtB,EAASD,EAAYH,MAA5C,SAEFsB,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQ,UAAY,cAChCV,EAAKoB,SACLR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,KAEEH,EAAAC,EAAAC,cAAA,OAAKQ,IAAKtB,EAAKoB,QAAQG,UAAUC,KAAMC,IAAI,UAC3Cb,EAAAC,EAAAC,cAAA,OAAKY,GAAG,QAAQ1B,EAAKoB,QAAQO,YAA7B,OACAf,EAAAC,EAAAC,cAAA,OAAKY,GAAG,QAAQ1B,EAAKoB,QAAQG,UAAUK,MACvChB,EAAAC,EAAAC,cAAA,OAAKY,GAAG,SAAS1B,EAAK6B,SAASC,OAEjClB,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQ,OAAS,WAC/BE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQf,EAAKoB,QAAQW,SAApC,QACAnB,EAAAC,EAAAC,cAAA,QAAMY,GAAG,YAAT,SAEFd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBf,EAAKoB,QAAQY,UAA7C,OACApB,EAAAC,EAAAC,cAAA,QAAMY,GAAG,YAAT,kBAEFd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYf,EAAKoB,QAAQa,UACxCrB,EAAAC,EAAAC,cAAA,QAAMY,GAAG,YAAT,gBAIFd,EAAAC,EAAAC,cAAA,OAAKY,GAAG,QAAR,oBCjDCQ,EANKC,YAAgB,CAClCzB,MCU0B,WAA0B,IAAzBD,IAAyB2B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACpD,MAAoB,kBADgCA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACzC/C,MAAiCkB,EACrCA,GDXPnB,KCLyB,WAA+B,IAA9BmB,EAA8B2B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB,UAAWG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxD,MAAoB,gBAAhBC,EAAOhD,KACFgD,EAAO/C,QAETiB,GDEPT,KCCyB,WAAwB,IAAvBS,EAAuB2B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,MAAoB,gBAAhBC,EAAOhD,KACFgD,EAAO/C,QAETiB,YCNM+B,EADDC,YAAYP,EAAaQ,YAAgBC,MCGvDC,IAASC,OACPjC,EAAAC,EAAAC,cAACF,EAAAC,EAAMiC,WAAP,KACElC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAUP,MAAOA,GACf5B,EAAAC,EAAAC,cAACkC,EAAD,QAGJC,SAASC,eAAe","file":"static/js/main.65ea513d.chunk.js","sourcesContent":["const change_city = (city) => {\n  return { type: \"change_city\", payload: city };\n};\n\nconst change_data = (city) => {\n  return (dispatch) => {\n    fetch(\n      `https://api.weatherapi.com/v1/current.json?key=decd753b07014de186b155610213007&q=${city}&aqi=no`\n    )\n      .then((resp) => resp.json())\n      .then((data) => {\n        console.log(\"aagya data:\", data);\n        dispatch({\n          type: \"change_data\",\n          payload: data,\n        });\n      })\n      .catch((e) => {\n        return city;\n      });\n  };\n};\n\nconst toogle_theme = { type: \"toogle_theme\" };\n\nexport { change_city, change_data, toogle_theme };\n","import React, { useEffect } from \"react\";\nimport { change_data, change_city, toogle_theme } from \"./actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  let city = useSelector((state) => state.city);\n  let data = useSelector((state) => state.data);\n  let theme = useSelector((state) => state.theme);\n\n  useEffect(() => {\n    dispatch(change_data(city));\n  }, []);\n\n  return (\n    <div className={theme ? \"cont\" : \"cont-dr\"}>\n      <button\n        className={theme ? \"toogle\" : \"toogle-dr\"}\n        onClick={() => dispatch(toogle_theme)}\n      >\n        {theme ? \"Light\" : \"Dark\"}\n      </button>\n      <div className={theme ? \"search\" : \"search-dr\"}>\n        <input\n          type=\"text\"\n          onChange={(e) => {\n            dispatch(change_city(e.target.value));\n          }}\n        ></input>\n        <button onClick={() => dispatch(change_data(city))}>Send</button>\n      </div>\n      <div className={theme ? \"weather\" : \"weather-br\"}>\n        {(data.current && (\n          <>\n            <div className=\"icon\">\n              00\n              <img src={data.current.condition.icon} alt=\"IMAGE\" />\n              <div id=\"temp\">{data.current.feelslike_c} *c</div>\n              <div id=\"text\">{data.current.condition.text}</div>\n              <div id=\"place\">{data.location.name}</div>\n            </div>\n            <div className={theme ? \"info\" : \"info-br\"}>\n              <div className=\"blocks\">\n                <div className=\"wind\">{data.current.wind_mph} mph</div>\n                <span id=\"infoItem\">Wind</span>\n              </div>\n              <div className=\"blocks\">\n                <div className=\"precipitation\">{data.current.precip_mm} mm</div>\n                <span id=\"infoItem\">precipitation</span>\n              </div>\n              <div className=\"blocks\">\n                <div className=\"humidity\">{data.current.humidity}</div>\n                <span id=\"infoItem\">Humidity</span>\n              </div>\n            </div>\n          </>\n        )) || <div id=\"temp\">N/A</div>}\n      </div>\n    </div>\n  );\n}\n","import { combineReducers } from \"redux\";\nimport { cityReducer, dataReducer, themeReducer } from \"./Reducer\";\n\nconst rootReducer = combineReducers({\n  theme: themeReducer,\n  city: cityReducer,\n  data: dataReducer,\n});\n\nexport default rootReducer;\n","export const cityReducer = (state = \"Roorkee\", action) => {\n  if (action.type === \"change_city\") {\n    return action.payload;\n  }\n  return state;\n};\n\nexport const dataReducer = (state = {}, action) => {\n  if (action.type === \"change_data\") {\n    return action.payload;\n  }\n  return state;\n};\n\nexport const themeReducer = (state = true, action) => {\n  if (action.type === \"toogle_theme\") return !state;\n  return state;\n};\n","import rootReducer from \"./reducers\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}